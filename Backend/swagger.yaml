swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/:
    get:
      security:
        - Bearer: []
      tags:
      - Transaction Module
      summary: Fetch all transactions
      description: Retrieve all transactions for the logged-in user.
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Bearer JWT token required
          required: true
      responses:
        '200':
          description: Transactions retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/collectResponse'
        '401':
          description: Unauthorized. Token is invalid or missing.
        '500':
          description: Internal server error.
  /transactions/details/{userId}{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
      - Transaction Module
      summary: Fetch transactions details
      description: Retrieve all transactions details for the logged-in user.
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Bearer JWT token required
          required: true
        - in: path
          type: string
          name: userId
          description: The User ID
          required: true
        - in: path
          type: string
          name: transactionId
          description: The ID of the transaction
          required: true
      responses:
        '200':
          description: Transaction details retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/collectResponseDetails'
        '401':
          description: Unauthorized. Token is invalid or missing.
        '500':
          description: Internal server error.
  /transactions/details/{userID}/{transactionID}:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: API to get the list of transactions for a specific account and a specific user
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Bearer JWT token required
          required: true
        - in: path
          type: string
          name: userID
          description: The User ID
          required: true
        - in: path
          type: string
          name: transactionID
          description: The transaction ID
          required: true
        - in: query
          type: string
          name: month
          description: Selected month
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/UpdateTransaction"
        "400":
          description: Invalid Fields
        '404':
          description: Invalid userId or accountId
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name
  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  collectResponse:
    type: object
    properties:
      userID:
        type: string
        description: The ID of user connected
      transactionID:
        type: string
        description: The ID of the transaction
      amount:
        type: string
        description: The amount of the transaction
      balance:
        type: string
        description: the balance of the transaction
      date:
        type: string
        description: The date of the transaction
  collectResponseDetails:
    type: object
    properties:
      userID:
        type: string
        description: The ID of user connected
      transactionID: 
        type: string
        description: The ID of the transaction to retrieve
      transaction type:
        type: string
      category: 
        type: string
        description: The category of the transaction
      note: 
        type: string
        description: Additional notes for the transaction
  UpdateTransaction:
    type: object
    properties:
      category:
        type: string
        description: Updated category for the transaction
      note:
        type: string
        description: Additional notes for the transaction
    required:
      - category
      - note
