swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transaction/collect:
    get:
      tags:
      - Transaction Module
      summary: Fetch all transactions
      description: Retrieve all transactions for the logged-in user.
      security:
        - Bearer: []
      responses:
        '200':
          description: Transactions retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/collectResponse'
        '401':
          description: Unauthorized. Token is invalid or missing.
        '500':
          description: Internal server error.
  /transaction/data:
    post:
      tags:
      - Transaction Module
      summary: Update a transaction
      description: Update the details of a specific transaction.
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Transaction details to update
          required: true
          schema:
            $ref: '#/definitions/PostTransaction'
      responses:
        '200':
          description: Transaction updated successfully.
          schema:
            $ref: '#/definitions/ApiResponse'
        '401':
          description: Unauthorized. Token is invalid or missing.
        '500':
          description: Internal server error.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name
  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  collectResponse:
    type: object
    properties:
      amount:
        type: string
        description: The amount of the transaction
      date:
        type: string
        description: The date of the transaction
      transactionType:
        type: string
        description: The type of transaction
      category:
        type: string
        description: The category of the transaction
      note:
        type: string
        description: Additional notes for the transaction
  PostTransaction:
    type: object
    properties:
      transactionId:
        type: string
        description: The ID of the transaction to update
      amount:
        type: string
        description: Updated amount for the transaction
      category:
        type: string
        description: Updated category for the transaction
      note:
        type: string
        description: Additional notes for the transaction

